spring:
  integration:
    poller:
      fixed-delay: 100
  cloud:
    stream:
      bindings:
        output:
          # if you don't provide the group you get an exclusive, auto-delete queue
          # A null or empty String value indicates an anonymous group that is not shared.
          group: haliho
          destination: demo
          producer:
            # pre-creating durable queues in RabbitMQ
            required-groups: haliho
          # by default adds the header contentType:	application/x-java-object;type=com.example.sourceapp.SourceApp$Greeting
          # the contentType here reflects the content type used by the corresponding binder during serializing the payload
          # and this content type will be used when de-serializing the payload at the consumer side. The originalContentType
          # is the actual contentType of the message which will be updated as contentType to the message after de-serialization
          # at the consumer.
          content-type: application/xml

  application:
    name: source-app

server:
  port: 8081

# by default only 'health' and 'info' endpoints are included
# http://www.baeldung.com/spring-boot-actuators

management:
  endpoints:
    web:
      exposure:
        include: ['*']

# consumer group: which means you can have multiple instances of consumers compete for messages from the same queue